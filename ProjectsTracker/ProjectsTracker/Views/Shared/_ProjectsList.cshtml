@using PagedList;
@using PagedList.Mvc;
@model PagedList.IPagedList<ProjectViewModel>

<table class="table table-striped projects">
    <thead>
        <tr>
            <th style="width: 1%">#</th>
            <th style="width: 20%">Project Name</th>
            <th>Team Members</th>
            <th>Project Progress</th>
            <th>Status</th>
            @if (User.IsInRole(RoleConstants.AdmminRole) || User.IsInRole(RoleConstants.ManagerRole))
            {
                <th style="width: 20%">Edit</th>
            }
            else
            {
                <th style="width: 20%">View</th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var project in Model)
        {
            if (project.isActive && !project.IsDeleted)
            {
                <tr>
                    <td>@project.Id</td>
                    <td>
                        <a>@project.Title</a>
                        <br />
                        <small>Created @String.Format($"{project.CreatedOn:f}")</small>
                    </td>
                    <td>
                        <ul class="list-inline">
                            @foreach (var user in project.WorkingUsers)
                            {
                                <li>
                                    <img src="~/Content/images/avatars/@(user.UserName).png" class="avatar" alt="@user.FirstName @user.LastName" title="@user.FirstName @user.LastName">
                                </li>
                            }
                        </ul>
                    </td>
                    <td class="project_progress">
                        <div class="progress progress_sm">
                            <div class="progress-bar bg-green" role="progressbar" data-transitiongoal="@String.Format("{0:n0}",project.Progress)"></div>
                        </div>
                        <small>@String.Format("{0:n0}", project.Progress)% Complete</small>
                    </td>
                    <td class="project-status">
                        <button type="button" class="btn status-@project.GetProjectStatus().ToLower() btn-xs">@project.GetProjectStatus()</button>
                    </td>

                    <td>
                        <a href="@Url.Action("Details", "Project", new {Id = project.Id})" class="btn btn-primary btn-xs"><i class="fa fa-folder"></i> View </a>
                        @if ((User.IsInRole(RoleConstants.ManagerRole) && User.Identity.GetUserId() == project.Owner.Id) || User.IsInRole(RoleConstants.AdmminRole))
                    {
                            <a href="@Url.Action("Edit", "Project", new {Id = project.Id})" class="btn btn-info btn-xs"><i class="fa fa-pencil"></i> Edit </a>
                        }

                        @if (User.IsInRole(RoleConstants.AdmminRole))
                    {
                            @Ajax.ActionLink("Delete",
                            "Delete", "Project",
                            new { Id = project.Id },
                            new AjaxOptions
                            {
                                Confirm = "Are you sure you want to delete this project?",
                                HttpMethod = "Post",
                                InsertionMode = InsertionMode.Replace,
                                UpdateTargetId = "projects-holder",
                                OnSuccess = "refreshProgressBars",
                                OnFailure = "alert('Something went wrong!')"
                            },
                            new { @class = "btn btn-danger btn-xs" })
                        }
                    </td>
                </tr>
            }


        }
        @if (!Model.Any())
        {
            <tr>
                <td>
                    There are no active projects.
                </td>
            </tr>
        }
    </tbody>
</table>


    @*@(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }));
