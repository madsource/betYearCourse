@model List<PTaskViewModel>

@if (Model.Any())
{
    <table class="table table-hover">
        <thead>
            <tr>
                <th>#</th>
                <th>@Html.DisplayNameFor(model => model[0].Title)</th>
                <th>@Html.DisplayNameFor(model => model[0].ProgressPercent)</th>
                <th>@Html.DisplayNameFor(model => model[0].Owner.UserName)</th>
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < Model.OrderBy(t => t.CreatedOn).Count(); i++)
            {
                var task = Model.OrderBy(t => t.CreatedOn).ElementAt(i);
                <tr id="task-@task.Id">
                    <th scope="row">@(i + 1)</th>
                    <td>
                        <a href="#" data-toggle="modal" data-target="#updateModal" data-taskId="@task.Id" data-tasktitle="@task.Title" >
                            @Html.DisplayFor(modelItem => task.Title)
                        </a>
                    </td>
                    <td>
                        <div class="progress right">
                            <div class="progress-bar progress-bar-success" data-transitiongoal="@task.ProgressPercent"></div>
                        </div>
                    </td>
                    <td>@Html.DisplayFor(modelItem => task.Owner.UserName)</td>
                    
                    @if (User.IsInRole(RoleConstants.AdmminRole) || (User.IsInRole(RoleConstants.ManagerRole) && User.Identity.GetUserId() == task.Author.Id))
                    {
                        <td>
                            @Ajax.ActionLink("Delete", "Delete", "PTask",
                            new { Id = task.Id },
                            new AjaxOptions
                            {
                                Confirm = "Are you sure you want to delete this task?",
                                HttpMethod = "Post",
                                InsertionMode = InsertionMode.Replace,
                                UpdateTargetId = "tasks-holder",
                                OnSuccess = "refreshProgressBars",
                                OnFailure = "alert('Something went wrong!')"
                            },
                            new { @class = "btn btn-danger btn-xs" })
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="well">@ProjectDetailsConstants.NoTasks</p>
}

@*<button type="button" class="btn btn-primary" data-toggle="modal" data-target=".bs-example-modal-lg">Large modal</button>*@
<div class="modal fade" id="updateModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="exampleModalLabel"></h4>
            </div>
            <div class="modal-body"></div>
        </div>
    </div>
</div>